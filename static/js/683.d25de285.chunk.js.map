{"version":3,"file":"static/js/683.d25de285.chunk.js","mappings":"wPAcA,MAgHA,EAhHoBA,KAClB,MAAMC,GAAWC,EAAAA,EAAAA,WACX,UAAEC,IAAcC,EAAAA,EAAAA,OACfC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAEjCG,EAAAA,EAAAA,YAAU,KACRD,EAAQ,CACN,CACE,CAACE,EAAAA,EAAKC,QAAS,QACf,CAACD,EAAAA,EAAKE,UAAW,gBAEnB,CACE,CAACF,EAAAA,EAAKC,QAAS,QACf,CAACD,EAAAA,EAAKE,UAAW,kCAEnB,CACE,CAACF,EAAAA,EAAKC,QAAS,QACf,CAACD,EAAAA,EAAKE,UAAW,gDAEnB,CACE,CAACF,EAAAA,EAAKC,QAAS,QACf,CAACD,EAAAA,EAAKE,UAAW,UAEnB,CACE,CAACF,EAAAA,EAAKC,QAAS,QACf,CAACD,EAAAA,EAAKE,UAAW,SAEnB,CACE,CAACF,EAAAA,EAAKC,QAAS,QACf,CAACD,EAAAA,EAAKE,UAAW,UAEnB,CACE,CAACF,EAAAA,EAAKC,QAAS,QACf,CAACD,EAAAA,EAAKE,UAAW,4BAEnB,CACE,CAACF,EAAAA,EAAKC,QAAS,QACf,CAACD,EAAAA,EAAKE,UAAW,4BAEnB,CACE,CAACF,EAAAA,EAAKC,QAAS,OACf,CAACD,EAAAA,EAAKE,UAAW,WAEnB,CACE,CAACF,EAAAA,EAAKC,QAAS,SACf,CAACD,EAAAA,EAAKE,UAAW,eAEnB,GAWD,IAEH,MAAMC,EAASA,KACbX,EAAU,CACRY,QAASC,EAAAA,GAAaC,gBACtB,EAYJ,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,UAAU,aACVC,SAAUV,EAAOM,UAEjBF,EAAAA,EAAAA,MAAA,SAAOK,UAAU,YAAWH,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,gBACAA,EAAAA,EAAAA,KAAA,SAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,8BAA6BH,SAAA,EAC1CC,EAAAA,EAAAA,KAACI,EAAAA,GAAK,CACJC,MAAOrB,EACPsB,SAAWC,GAAMtB,EAAWsB,EAAEC,OAAOH,OACrCI,YAAaC,EAAAA,GAAoBC,kBACjCC,KAAMC,EAAAA,MAERb,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CAACC,KAAMC,EAAAA,GAAeC,QAASxB,mBAOlDO,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACJC,IAAKvC,EACLwC,QAASC,EAAAA,GACTlC,KAAMA,EACNmC,SAAU,GACVC,qBAAqB,MAEtB,C","sources":["pages/SoundSource.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport Button, { BUTTON_SEARCH } from \"../components/Button\";\nimport Input, { INPUT_SIZE_LG } from \"../components/Input\";\nimport Table from \"../components/Table\";\nimport {\n  SOUND_SOURCE_COLUMNS,\n} from \"../config/DataConfig\";\nimport { InfoMessages, SoundSourceMessages } from \"../constants/Message\";\nimport { useModal } from \"../contexts/ModalContext\";\nimport { ROUTES } from \"../constants/routes\";\nimport axios from \"../api/axios\";\nimport { KEYS } from \"../constants/Keys\";\nimport Form from \"../components/Form\";\n\nconst SoundSource = () => {\n  const tableRef = useRef();\n  const { showAlert } = useModal();\n  const [keyword, setKeyword] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setData([\n      {\n        [KEYS.RBT_ID]: 3820472,\n        [KEYS.DESCRIPT]: \"편지\",\n      },\n      {\n        [KEYS.RBT_ID]: 1234523,\n        [KEYS.DESCRIPT]: \"모르시나요\",\n      },\n      {\n        [KEYS.RBT_ID]: 3457435,\n        [KEYS.DESCRIPT]: \"가끔 니가 생각나\",\n      },\n      {\n        [KEYS.RBT_ID]: 2653455,\n        [KEYS.DESCRIPT]: \"Period\",\n      },\n      {\n        [KEYS.RBT_ID]: 2477854,\n        [KEYS.DESCRIPT]: \"Again\",\n      },\n      {\n        [KEYS.RBT_ID]: 6799556,\n        [KEYS.DESCRIPT]: \"화\",\n      },\n      {\n        [KEYS.RBT_ID]: 8576833,\n        [KEYS.DESCRIPT]: \"슈퍼노바\",\n      },\n      {\n        [KEYS.RBT_ID]: 5799336,\n        [KEYS.DESCRIPT]: \"레블하트\",\n      },\n      {\n        [KEYS.RBT_ID]: 583594,\n        [KEYS.DESCRIPT]: \"Forever\",\n      },\n      {\n        [KEYS.RBT_ID]: 16690345,\n        [KEYS.DESCRIPT]: \"Like Water\",\n      },\n    ]);\n    // TODO :: 최초 로드는 전체 리스트 출력 하는지? , keywords를 빈값으로 보내면 되는건지?\n    // axios.get(ROUTES.CONTENTS, keyword).then((res) => {\n    //   if (res.data.length === 0) {\n    //     showAlert({\n    //       message: InfoMessages.noSearchResult,\n    //     });\n    //     return;\n    //   }\n    //   setData(res.data);\n    // });\n  }, []);\n\n  const search = () => {\n    showAlert({\n      message: InfoMessages.noSearchResult,\n    });\n    // axios.get(ROUTES.CONTENTS, keyword).then((res) => {\n    //   if (res.data.length === 0) {\n    //     showAlert({\n    //       message: InfoMessages.noSearchResult,\n    //     });\n    //     return;\n    //   }\n    //   setData(res.data);\n    // });\n  };\n\n  return (\n    <>\n      <Form\n        className=\"search-box\"\n        onSubmit={search}\n      >\n        <table className=\"tbl-input\">\n          <colgroup></colgroup>\n          <tbody>\n            <tr>\n              <td>\n                <div className=\"form-field dflex wrap gap10\">\n                  <Input\n                    value={keyword}\n                    onChange={(e) => setKeyword(e.target.value)}\n                    placeholder={SoundSourceMessages.searchPlaceHolder}\n                    size={INPUT_SIZE_LG}\n                  />\n                  <Button type={BUTTON_SEARCH} onClick={search} />\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Form>\n      <Table\n        ref={tableRef}\n        columns={SOUND_SOURCE_COLUMNS}\n        data={data}\n        pageSize={10}\n        rowSelectionEnabled={false}\n      />\n    </>\n  );\n};\n\nexport default SoundSource;\n"],"names":["SoundSource","tableRef","useRef","showAlert","useModal","keyword","setKeyword","useState","data","setData","useEffect","KEYS","RBT_ID","DESCRIPT","search","message","InfoMessages","noSearchResult","_jsxs","_Fragment","children","_jsx","Form","className","onSubmit","Input","value","onChange","e","target","placeholder","SoundSourceMessages","searchPlaceHolder","size","INPUT_SIZE_LG","Button","type","BUTTON_SEARCH","onClick","Table","ref","columns","SOUND_SOURCE_COLUMNS","pageSize","rowSelectionEnabled"],"sourceRoot":""}