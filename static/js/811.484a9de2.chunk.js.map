{"version":3,"file":"static/js/811.484a9de2.chunk.js","mappings":"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","sources":["components/PhoneNumberInput.jsx","components/Select.jsx","utils/FormValidation.js","pages/AccountRegister.jsx"],"sourcesContent":["import React from \"react\";\nimport { InfoMessages } from \"../constants/Message\";\n\nconst formatPhoneNumber = (value) => {\n  const digits = value.replace(/\\D/g, \"\");\n\n  if (digits.length <= 3) return digits;\n  if (digits.length <= 7) return `${digits.slice(0, 3)}-${digits.slice(3)}`;\n  if (digits.length <= 11)\n    return `${digits.slice(0, 3)}-${digits.slice(3, 7)}-${digits.slice(7)}`;\n\n  return `${digits.slice(0, 3)}-${digits.slice(3, 7)}-${digits.slice(7, 11)}`;\n};\n\nconst PhoneNumberInput = ({ value, onChange, size = \"nm\" }) => {\n  const handleChange = (e) => {\n    const formatted = formatPhoneNumber(e.target.value);\n    const syntheticEvent = {\n      ...e,\n      target: {\n        ...e.target,\n        value: formatted,\n      },\n    };\n    onChange?.(syntheticEvent);\n  };\n\n  return (\n    <input\n      className={`form-input ${size}`}\n      type=\"text\"\n      value={value}\n      onChange={handleChange}\n      maxLength={13}\n      placeholder={InfoMessages.mobile}\n    />\n  );\n};\n\nexport default PhoneNumberInput;\n","import React from \"react\";\n\nconst Select = ({ value, options, onChange, nonEmpty = true, name, id }) => (\n  <div className=\"select-box\">\n    <select name={name} id={id} value={value} onChange={onChange}>\n      {!nonEmpty && <option value=\"\"></option>}\n      {options.map((opt) => (\n        <option key={opt.key} value={opt.key}>\n          {opt.value}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n\nexport default Select;\n","import { KEYS } from \"../constants/Keys\";\nimport { ErrorMessages } from \"../constants/Message\";\n\nexport const isValidEmail = (email) => {\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return regex.test(email);\n};\n\nexport const isValidPhone = (phone) => {\n  //   const cleaned = phone.replace(/[^0-9]/g, \"\");\n  const regex = /^01[016789]-?\\d{3,4}-?\\d{4}$/;\n  return regex.test(phone);\n};\n\nexport const isValidPassword = (password) => {\n  // 8~20 영문/숫자/특수문자 혼합\n  const regex =\n    /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()\\-_=+{}[\\]|;:'\",.<>/?`~\\\\]).{8,20}$/;\n  return regex.test(password);\n};\n\nexport const hasEmptyValue = (obj) => {\n  if (!obj || Object.keys(obj).length === 0) return true;\n\n  return Object.values(obj).some(\n    (value) =>\n      value == null || // null, undefined\n      (typeof value === \"string\" && value.trim() === \"\") // 공백 문자열\n  );\n};\n\nexport const fieldsValidate = (fields, formData) => {\n  for (const field of fields) {\n    const {\n      key,\n      label,\n      required,\n      type,\n      min,\n      max,\n      length,\n      disabled,\n      fields: nestedFields,\n    } = field;\n\n    if (disabled) continue;\n\n    const value = formData[key];\n\n    // ✅ 1. 기본 필수값 검사\n    if (required && !value && !nestedFields) {\n      return ErrorMessages.required(label);\n    }\n\n    // ✅ 2. 중첩 필드가 있는 경우\n    if (required && nestedFields?.length) {\n      for (const subField of nestedFields) {\n        const subValue = formData[subField.key];\n\n        // 2-1. 필수값\n        if (subValue === undefined || subValue === \"\") {\n          return ErrorMessages.required(`${label}`);\n        }\n\n        // 2-2. 길이 검사 (number 포함)\n        if (subField.length) {\n          const actualLength = String(subValue).length;\n          if (actualLength !== subField.length) {\n            return ErrorMessages.lengthMismatch2(`${label}`, subField.length);\n          }\n        }\n      }\n    }\n\n    // ✅ 3. 타입별 validation\n    if (key === KEYS.MOBILE && !isValidPhone(value)) {\n      return ErrorMessages.invalidPhone;\n    }\n\n    if (type === \"email\" && !isValidEmail(value)) {\n      return ErrorMessages.invalidEmail;\n    }\n\n    // ✅ 4. 길이 검사 (string)\n    if (typeof value === \"string\") {\n      if (min && max && (value.length < min || value.length > max)) {\n        return ErrorMessages.lengthMismatch(label, min, max);\n      }\n\n      if (length && value.length !== length) {\n        return ErrorMessages.lengthMismatch2(label, length);\n      }\n    }\n\n    // ✅ 5. 비밀번호 검사\n    if (type === \"password\") {\n      if (!isValidPassword(value)) {\n        return ErrorMessages.invalidPassword;\n      }\n      if (value !== formData[KEYS.PASSWORD_CONFIRM]) {\n        return ErrorMessages.correctPassword;\n      }\n    }\n  }\n\n  return;\n};","import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ACCOUNTS_REGISTER_FIELDS } from \"../config/FieldsConfig\";\nimport Button, { BUTTON_CANCEL, BUTTON_SAVE } from \"../components/Button\";\nimport Input from \"../components/Input\";\nimport Select from \"../components/Select\";\nimport { ROUTES } from \"../constants/routes\";\nimport { useModal } from \"../contexts/ModalContext\";\nimport { ErrorMessages, InfoMessages } from \"../constants/Message\";\nimport axios from \"../api/axios\";\nimport { fieldsValidate } from \"../utils/FormValidation\";\nimport { KEYS } from \"../constants/Keys\";\nimport { ADMIN_TYPES } from \"../config/OPTIONS\";\nimport PhoneNumberInput from \"../components/PhoneNumberInput\";\n\nconst AccountRegister = () => {\n  const navigate = useNavigate();\n  const { showAlert, showDialog, closeModal } = useModal();\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    // 초기 값 세팅\n    setFormData({\n      ...formData,\n      [KEYS.ADMIN_TYPE]: ADMIN_TYPES[0].key,\n    });\n  }, []);\n\n  const handleSave = () => {\n    showDialog({\n      message: InfoMessages.confirmRegister,\n      onConfirm: () => {\n        closeModal();\n\n        setTimeout(() => {\n          const errValidate = fieldsValidate(\n            ACCOUNTS_REGISTER_FIELDS,\n            formData\n          );\n          if (errValidate) {\n            showAlert({\n              message: errValidate,\n            });\n            return;\n          }\n          save();\n        }, 50);\n      },\n    });\n  };\n\n  const save = () => {\n    console.log(\"저장할 데이터:\", formData);\n\n    // axios.post(ROUTES.ACCOUNTS, formData).then(res=>{\n    //   showAlert({\n    //     message: InfoMessages.successAccountSave,\n    //     onConfirm: () => navigate(ROUTES.SUBSCRIBERS),\n    //   });\n    // })\n\n    showAlert({\n      message: InfoMessages.successAccountSave,\n      onConfirm: () => navigate(ROUTES.ACCOUNTS),\n    });\n  };\n\n  const cancel = () => {\n    showDialog({\n      message: InfoMessages.confirmCancel,\n      onConfirm: () => navigate(ROUTES.ACCOUNTS),\n    });\n  };\n\n  return (\n    <>\n      <form className=\"tbl-view\">\n        <table>\n          <colgroup>\n            <col className=\"w250\"></col>\n            <col></col>\n          </colgroup>\n          <tbody>\n            {ACCOUNTS_REGISTER_FIELDS.map((field, idx) => {\n              const {\n                key,\n                label,\n                type = \"text\",\n                options = [],\n                required,\n                placeholder,\n                comment,\n                disabled,\n              } = field;\n              const value = formData[key] || \"\";\n\n              const handleChange = (e) => {\n                setFormData((prev) => ({ ...prev, [key]: e.target.value }));\n              };\n\n              return (\n                <tr key={idx}>\n                  <th className=\"Labels\">\n                    {label}\n                    {required && <em>*</em>}\n                  </th>\n                  <td className=\"value\">\n                    {type === \"select\" ? (\n                      <Select\n                        value={value}\n                        options={options}\n                        onChange={handleChange}\n                      />\n                    ) : comment ? (\n                      <div>\n                        <Input\n                          value={value}\n                          type={type}\n                          placeholder={placeholder}\n                          onChange={handleChange}\n                          disabled={disabled}\n                        />\n                        <span className=\"comment\">{comment}</span>\n                      </div>\n                    ) : key === KEYS.MOBILE ? (\n                      <PhoneNumberInput\n                        value={value}\n                        onChange={handleChange}\n                      />\n                    ) : key === KEYS.PASSWORD_CONFIRM ? (\n                      <div>\n                        <Input\n                          value={value}\n                          type={type}\n                          placeholder={placeholder}\n                          onChange={handleChange}\n                          disabled={disabled}\n                        />\n                        <span className=\"password-confirm\">\n                          {formData[KEYS.PASSWORD] !==\n                            formData[KEYS.PASSWORD_CONFIRM] &&\n                            ErrorMessages.correctPassword}\n                        </span>\n                      </div>\n                    ) : (\n                      <Input\n                        value={value}\n                        type={type}\n                        placeholder={placeholder}\n                        onChange={handleChange}\n                        disabled={disabled}\n                      />\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </form>\n      <div className=\"btn-wrap\">\n        <div>\n          <Button type={BUTTON_CANCEL} onClick={cancel} />\n        </div>\n        <div>\n          <Button type={BUTTON_SAVE} onClick={handleSave} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AccountRegister;\n"],"names":["_ref","value","onChange","size","_jsx","className","type","e","formatted","digits","replace","length","slice","formatPhoneNumber","target","syntheticEvent","maxLength","placeholder","InfoMessages","mobile","options","nonEmpty","name","id","children","_jsxs","map","opt","key","isValidEmail","email","test","isValidPhone","phone","isValidPassword","password","hasEmptyValue","obj","Object","keys","values","some","trim","fieldsValidate","fields","formData","field","label","required","min","max","disabled","nestedFields","ErrorMessages","subField","subValue","undefined","String","lengthMismatch2","KEYS","MOBILE","invalidPhone","invalidEmail","lengthMismatch","invalidPassword","PASSWORD_CONFIRM","correctPassword","AccountRegister","navigate","useNavigate","showAlert","showDialog","closeModal","useModal","setFormData","useState","useEffect","ADMIN_TYPE","ADMIN_TYPES","save","console","log","message","successAccountSave","onConfirm","ROUTES","ACCOUNTS","_Fragment","ACCOUNTS_REGISTER_FIELDS","idx","comment","handleChange","prev","Select","Input","PhoneNumberInput","PASSWORD","Button","BUTTON_CANCEL","onClick","cancel","confirmCancel","BUTTON_SAVE","handleSave","confirmRegister","setTimeout","errValidate"],"sourceRoot":""}